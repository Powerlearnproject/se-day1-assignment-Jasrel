
(1) Software engineering involves the systematic application of engineering 
principles, methods and tools to develop and maintain high-quality software systems. 
It involves software products design, development, testing, deployment and maintenance.

The Importance of Software Engineering in technology industries is discussed below:
Software engineering plays a vital role in technology industry by enabling the creation of 
software applications and systems that power various aspects of modern life, including communication,
commerce, entertainment, and healthcare.


(2) The milestone include:

1. The development of programming languages e.g Fortran, C etc
2. the establishment of software engineering as a discipline in the 1960s
3. The advent of structured programming in the 1970s


(3) The Phases of Software Development Life Cycle include:

- Requirements: Gathering and documenting users needs and system requirements
- Design: Creating high-level and detailed designs of the software architecture and user interface
- Testing: Conducting various tests to ensure the software meets quality standards and functional requirements.
- Deployment: Releasing the software to users or customers
- Maintenance: providing ongoing support, update, and enhancements to thesoftware after deployment.


(4) Waterfall is best when requirements are well-understood and unlikely to change and when a structured, 
phased-based approach is needed While Agile is ideal with projects with evolving requirements, where flexibility, 
rapid delivery and continuous improvement are prioritized.
Scenarios where waterfall is appropriate include: developing software for industries like healthcare, finance or defense 
while scenarios where Agile is appropriate include : developing a user interface for a software product where the design needs 
to be continuously refined based on user testing and a project where continuous integration and continous delivery of updates are 
necessary to keep up with user demands and market trends.


(5) Their Roles and Responsibilities are outlined below:

1. Software Developer: Responsible for writing code and implementing software solutions
2. Project Manager: Oversees the planning, execution and delivery of software projects
3. Quality Assurance Engineer: Ensures software quality by designing and executing test plans.


(6)
1. Integrated Development Environments (IDEs): Software suites that provide comprehensive tools for writing, debugging, and testing code (e.g Visual Studio, Eclipse)
2. Version Control Systems (VCS): software tool for tracking changes to source code and coordinating work among team members (e.g Git, Subversion)

(7) The challenges incude:

- Tight deadline: pressure to deliver software products on schedule can resualt in rushed development and compromise quality
- Changing Requirements: requirements may change during the development cycle leading to scope creeps and projects delays.
- Technical Debt: Accrued from shortcuts or suboptimal solutions, technical debt can impede future development efforts and increase maintenance cost.

The strategies for overcoming challenges are:- Prioritization of task
- Regular reassessment of project goals
- Effective communication
- Agile Methodologies


(8)
1. Unit Testing: Testing individual components or modules of software.
2. Integration Testing: Testing interactions between different components or subsystems.
3. System Testing: Testing the entire software system as a whole.
4. Acceptance Testing: Testing the software against user requirements to ensure it meets user needs.

   Importance of Software Quality Control: Quality control measures such as code reviews, automated testing, 
and continuous integration help identify and fix defects early in the development process, leading to higher-quality software products.

#Part 2: Introduction to AI and Prompt Engineering.

(9)
Prompt engineering is all about crafting questions or statements to get the best possible responses from Al models.
its importance is discussed below:
Prompt engineering helps to avoid confusing answers whenever we ask questions that are clear and specific, so the Al understands exactly what you need.

Provide an example of a vague prompt and then improve it by making it clear, specific, and concise. Explain why the improved prompt is more effective.

Example of a vague prompt: "Tell me about cars".
Improved prompt: Tell me about Mercedes-Benz C-Class".

The improved prompt is more effective because it will allow one to get a more focused response
